{"version":3,"sources":["components/UserForm.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["UserForm","_ref","onUserAdded","initialData","name","setName","useState","email","setEmail","password","setPassword","loading","setLoading","_jsxs","onSubmit","async","event","preventDefault","trim","length","alert","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","message","style","display","gap","maxWidth","margin","padding","border","borderRadius","backgroundColor","children","_jsx","htmlFor","marginBottom","fontWeight","type","id","value","onChange","e","target","required","width","fontSize","placeholder","minLength","disabled","color","cursor","marginTop","Home","users","setUsers","setError","fetchUsers","data","err","useEffect","textAlign","onClick","handleUserAdded","map","user","justifyContent","alignItems","Date","createdAt","toLocaleDateString","concat","userId","handleDeleteUser","App","Router","className","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76a47a06.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ninterface UserFormProps {\n  onUserAdded?: () => void;\n  initialData?: { name: string; email: string; password: string };\n}\n\nconst UserForm: React.FC<UserFormProps> = ({ onUserAdded, initialData }) => {\n  const [name, setName] = useState(initialData?.name || '');\n  const [email, setEmail] = useState(initialData?.email || '');\n  const [password, setPassword] = useState(initialData?.password || '');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    \n    if (!name.trim() || !email.trim() || !password.trim()) {\n      alert('Por favor, preencha todos os campos');\n      return;\n    }\n\n    if (password.length < 5) {\n      alert('A senha deve ter pelo menos 5 caracteres');\n      return;\n    }\n\n    setLoading(true);\n    \n    try {\n      const response = await fetch('http://localhost:3001/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Erro ao criar usuário');\n      }\n\n      // Limpar o formulário\n      setName('');\n      setEmail('');\n      setPassword('');\n      \n      // Notificar o componente pai\n      if (onUserAdded) {\n        onUserAdded();\n      }\n      \n      alert('Usuário criado com sucesso!');\n    } catch (error) {\n      alert(error instanceof Error ? error.message : 'Erro ao criar usuário');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ \n      display: 'grid', \n      gap: '15px', \n      maxWidth: '400px', \n      margin: '0 auto',\n      padding: '20px',\n      border: '1px solid #ddd',\n      borderRadius: '8px',\n      backgroundColor: '#f8f9fa'\n    }}>\n      <div>\n        <label htmlFor=\"name\" style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n          Nome:\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n          style={{\n            width: '100%',\n            padding: '8px 12px',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }}\n          placeholder=\"Digite o nome completo\"\n        />\n      </div>\n      \n      <div>\n        <label htmlFor=\"email\" style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n          Email:\n        </label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          style={{\n            width: '100%',\n            padding: '8px 12px',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }}\n          placeholder=\"usuario@exemplo.com\"\n        />\n      </div>\n      \n      <div>\n        <label htmlFor=\"password\" style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n          Senha:\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          minLength={5}\n          style={{\n            width: '100%',\n            padding: '8px 12px',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }}\n          placeholder=\"Mínimo 5 caracteres\"\n        />\n      </div>\n      \n      <button \n        type=\"submit\" \n        disabled={loading}\n        style={{\n          backgroundColor: loading ? '#6c757d' : '#007bff',\n          color: 'white',\n          border: 'none',\n          padding: '12px 20px',\n          borderRadius: '4px',\n          fontSize: '16px',\n          cursor: loading ? 'not-allowed' : 'pointer',\n          marginTop: '10px'\n        }}\n      >\n        {loading ? 'Criando...' : 'Criar Usuário'}\n      </button>\n    </form>\n  );\n};\n\nexport default UserForm;","import React, { useEffect, useState } from 'react';\nimport UserForm from '../components/UserForm';\n\ninterface User {\n    id: string;\n    name: string;\n    email: string;\n    createdAt: string;\n}\n\nconst Home: React.FC = () => {\n    const [users, setUsers] = useState<User[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    const fetchUsers = async () => {\n        try {\n            setLoading(true);\n            const response = await fetch('http://localhost:3001/api/users');\n            if (!response.ok) {\n                throw new Error('Erro ao buscar usuários');\n            }\n            const data = await response.json();\n            setUsers(data);\n            setError(null);\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'Erro desconhecido');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleUserAdded = () => {\n        fetchUsers(); // Recarrega a lista após adicionar um usuário\n    };\n\n    const handleDeleteUser = async (userId: string) => {\n        try {\n            const response = await fetch(`http://localhost:3001/api/users/${userId}`, {\n                method: 'DELETE'\n            });\n            if (!response.ok) {\n                throw new Error('Erro ao deletar usuário');\n            }\n            await fetchUsers(); // Recarrega a lista\n        } catch (err) {\n            alert(err instanceof Error ? err.message : 'Erro ao deletar usuário');\n        }\n    };\n\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n\n    if (loading) {\n        return <div style={{ textAlign: 'center', padding: '20px' }}>Carregando usuários...</div>;\n    }\n\n    if (error) {\n        return (\n            <div style={{ textAlign: 'center', padding: '20px', color: 'red' }}>\n                <p>Erro: {error}</p>\n                <button onClick={fetchUsers}>Tentar novamente</button>\n            </div>\n        );\n    }\n\n    return (\n        <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n            <h2>Adicionar Novo Usuário</h2>\n            <UserForm onUserAdded={handleUserAdded} />\n            \n            <h2 style={{ marginTop: '40px' }}>Lista de Usuários ({users.length})</h2>\n            {users.length === 0 ? (\n                <p>Nenhum usuário encontrado.</p>\n            ) : (\n                <div style={{ display: 'grid', gap: '10px' }}>\n                    {users.map(user => (\n                        <div \n                            key={user.id} \n                            style={{ \n                                border: '1px solid #ddd', \n                                padding: '15px', \n                                borderRadius: '5px',\n                                backgroundColor: '#f9f9f9',\n                                display: 'flex',\n                                justifyContent: 'space-between',\n                                alignItems: 'center'\n                            }}\n                        >\n                            <div>\n                                <h3 style={{ margin: '0 0 5px 0' }}>{user.name}</h3>\n                                <p style={{ margin: '0', color: '#666' }}>{user.email}</p>\n                                <small style={{ color: '#888' }}>\n                                    Criado em: {new Date(user.createdAt).toLocaleDateString('pt-BR')}\n                                </small>\n                            </div>\n                            <button \n                                onClick={() => handleDeleteUser(user.id)}\n                                style={{ \n                                    backgroundColor: '#dc3545', \n                                    color: 'white', \n                                    border: 'none', \n                                    padding: '8px 16px', \n                                    borderRadius: '4px',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                Excluir\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './pages/Home';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header style={{ padding: '20px', backgroundColor: '#282c34', color: 'white', textAlign: 'center' }}>\n          <h1>Sistema de Cadastro de Usuários</h1>\n        </header>\n        <main style={{ padding: '20px' }}>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}